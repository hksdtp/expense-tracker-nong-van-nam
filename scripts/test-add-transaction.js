#!/usr/bin/env node

/**
 * Script ƒë·ªÉ test vi·ªác th√™m giao d·ªãch m·ªõi
 */

require('dotenv').config({ path: '.env.local' })

async function testAddTransaction() {
  console.log('üß™ Test th√™m giao d·ªãch m·ªõi...')
  
  try {
    // T·∫°o d·ªØ li·ªáu test
    const testTransaction = {
      type: 'expense',
      category: 'Chi ph√≠ kh√°c',
      description: 'Test transaction t·ª´ script',
      amount: '50000',
      paymentMethod: 'transfer',
      date: '10/07/2025',
      note: 'ƒê√¢y l√† giao d·ªãch test',
      receiptLink: '',
      subCategory: '',
      fuelLiters: ''
    }

    console.log('\nüìã D·ªØ li·ªáu test:', testTransaction)

    // T·∫°o FormData
    const formData = new FormData()
    Object.entries(testTransaction).forEach(([key, value]) => {
      formData.append(key, value)
    })

    console.log('\nüåê G·ª≠i request ƒë·∫øn API...')

    // G·ªçi API
    const response = await fetch('http://localhost:3000/api/transactions', {
      method: 'POST',
      body: formData,
    })

    console.log(`üìä Response status: ${response.status}`)

    if (response.ok) {
      const result = await response.json()
      console.log('‚úÖ Giao d·ªãch ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!')
      console.log('üìã Response data:', JSON.stringify(result, null, 2))
      
      // Ki·ªÉm tra trong Google Sheets
      console.log('\nüîç Ki·ªÉm tra trong Google Sheets...')
      await checkGoogleSheets()
      
    } else {
      const errorData = await response.json()
      console.log('‚ùå L·ªói khi th√™m giao d·ªãch:')
      console.log('üìã Error data:', JSON.stringify(errorData, null, 2))
    }

  } catch (error) {
    console.error('\n‚ùå L·ªói trong qu√° tr√¨nh test:', error)
    throw error
  }
}

async function checkGoogleSheets() {
  try {
    const { google } = require('googleapis')
    const { JWT } = require('google-auth-library')

    // Kh·ªüi t·∫°o Google APIs
    let privateKey = process.env.GOOGLE_SHEETS_PRIVATE_KEY
    if (privateKey.includes('\\n')) {
      privateKey = privateKey.replace(/\\n/g, '\n')
    }

    const auth = new JWT({
      email: process.env.GOOGLE_SHEETS_CLIENT_EMAIL,
      key: privateKey,
      scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    })

    const sheets = google.sheets({ version: 'v4', auth })
    const SPREADSHEET_ID = process.env.GOOGLE_SHEETS_SHEET_ID

    // L·∫•y d·ªØ li·ªáu t·ª´ Google Sheets
    const response = await sheets.spreadsheets.values.get({
      spreadsheetId: SPREADSHEET_ID,
      range: 'Sheet1!A:L',
    })

    const rows = response.data.values || []
    console.log(`üìä Google Sheets hi·ªán c√≥ ${rows.length} h√†ng`)
    
    if (rows.length > 1) {
      console.log('üìã Giao d·ªãch cu·ªëi c√πng:')
      const lastRow = rows[rows.length - 1]
      console.log(`   Ng√†y: ${lastRow[0]}`)
      console.log(`   Danh m·ª•c: ${lastRow[1]}`)
      console.log(`   M√¥ t·∫£: ${lastRow[2]}`)
      console.log(`   S·ªë ti·ªÅn: ${lastRow[3]}`)
      console.log(`   Lo·∫°i: ${lastRow[4]}`)
      console.log(`   Th·ªùi gian: ${lastRow[6]}`)
    }

    // Test API GET ƒë·ªÉ xem c√≥ l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu kh√¥ng
    console.log('\nüîç Test API GET transactions...')
    const getResponse = await fetch('http://localhost:3000/api/transactions?month=7&year=2025&forceRefresh=true')
    
    if (getResponse.ok) {
      const getData = await getResponse.json()
      console.log(`üìä API GET tr·∫£ v·ªÅ ${getData.transactions?.length || 0} giao d·ªãch`)
      
      if (getData.transactions?.length > 0) {
        console.log('üìã Giao d·ªãch m·ªõi nh·∫•t t·ª´ API:')
        const latestTransaction = getData.transactions[getData.transactions.length - 1]
        console.log(`   ID: ${latestTransaction.id}`)
        console.log(`   Ng√†y: ${latestTransaction.date}`)
        console.log(`   M√¥ t·∫£: ${latestTransaction.description}`)
        console.log(`   S·ªë ti·ªÅn: ${latestTransaction.amount}`)
      }
    } else {
      console.log(`‚ùå API GET l·ªói: ${getResponse.status}`)
    }

  } catch (error) {
    console.log(`‚ùå L·ªói ki·ªÉm tra Google Sheets: ${error.message}`)
  }
}

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  testAddTransaction()
    .then(() => {
      console.log('\n‚úÖ Test ho√†n th√†nh!')
      process.exit(0)
    })
    .catch((error) => {
      console.error('\n‚ùå Test th·∫•t b·∫°i:', error)
      process.exit(1)
    })
}

module.exports = { testAddTransaction }
