#!/usr/bin/env node

/**
 * Script ƒë·ªÉ x√°c minh cu·ªëi c√πng r·∫±ng ·ª©ng d·ª•ng ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng
 * ƒë·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ Google Sheets tr·ªëng
 */

const { google } = require('googleapis')
const { JWT } = require('google-auth-library')
require('dotenv').config({ path: '.env.local' })

async function finalVerification() {
  console.log('üîç X√°c minh cu·ªëi c√πng c·∫•u h√¨nh ·ª©ng d·ª•ng...')
  
  try {
    // 1. Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng
    console.log('\nüìã 1. Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng:')
    console.log(`   GOOGLE_SHEETS_SHEET_ID: ${process.env.GOOGLE_SHEETS_SHEET_ID}`)
    console.log(`   GOOGLE_SHEETS_CLIENT_EMAIL: ${process.env.GOOGLE_SHEETS_CLIENT_EMAIL}`)
    console.log(`   GOOGLE_SHEETS_PRIVATE_KEY: ${process.env.GOOGLE_SHEETS_PRIVATE_KEY ? 'ƒê√£ c·∫•u h√¨nh' : 'Ch∆∞a c·∫•u h√¨nh'}`)

    // 2. Ki·ªÉm tra k·∫øt n·ªëi Google Sheets
    console.log('\nüìä 2. Ki·ªÉm tra k·∫øt n·ªëi Google Sheets:')
    
    let privateKey = process.env.GOOGLE_SHEETS_PRIVATE_KEY
    if (privateKey.includes('\\n')) {
      privateKey = privateKey.replace(/\\n/g, '\n')
    }

    const auth = new JWT({
      email: process.env.GOOGLE_SHEETS_CLIENT_EMAIL,
      key: privateKey,
      scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    })

    const sheets = google.sheets({ version: 'v4', auth })
    const SPREADSHEET_ID = process.env.GOOGLE_SHEETS_SHEET_ID

    // Ki·ªÉm tra sheet "Sheet1"
    const response = await sheets.spreadsheets.values.get({
      spreadsheetId: SPREADSHEET_ID,
      range: 'Sheet1!A:L',
    })

    const rows = response.data.values || []
    console.log(`   ‚úÖ K·∫øt n·ªëi th√†nh c√¥ng v·ªõi Google Sheets`)
    console.log(`   üìã Sheet "Sheet1" c√≥ ${rows.length} h√†ng`)
    
    if (rows.length === 0) {
      console.log(`   ‚úÖ Sheet ho√†n to√†n tr·ªëng - ƒê√öNG!`)
    } else if (rows.length === 1) {
      console.log(`   ‚úÖ Sheet ch·ªâ c√≥ header - ƒê√öNG!`)
      console.log(`   üìã Header: ${JSON.stringify(rows[0])}`)
    } else {
      console.log(`   ‚ö†Ô∏è Sheet c√≥ ${rows.length - 1} giao d·ªãch`)
      console.log(`   üìã Giao d·ªãch m·∫´u: ${JSON.stringify(rows.slice(1, 3))}`)
    }

    // 3. Ki·ªÉm tra API endpoint
    console.log('\nüåê 3. Ki·ªÉm tra API endpoint:')
    
    try {
      const apiResponse = await fetch('http://localhost:3000/api/transactions?month=7&year=2025&forceRefresh=true')
      if (apiResponse.ok) {
        const apiData = await apiResponse.json()
        console.log(`   ‚úÖ API ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng`)
        console.log(`   üìä Tr·∫£ v·ªÅ ${apiData.transactions?.length || 0} giao d·ªãch`)
        console.log(`   üìã Debug info: totalRowsInSheet = ${apiData.debug?.totalRowsInSheet || 0}`)
        
        if (apiData.transactions?.length === 0) {
          console.log(`   ‚úÖ API tr·∫£ v·ªÅ d·ªØ li·ªáu tr·ªëng - ƒê√öNG!`)
        } else {
          console.log(`   ‚ö†Ô∏è API v·∫´n tr·∫£ v·ªÅ d·ªØ li·ªáu c≈©`)
        }
      } else {
        console.log(`   ‚ùå API tr·∫£ v·ªÅ status: ${apiResponse.status}`)
      }
    } catch (apiError) {
      console.log(`   ‚ùå L·ªói khi g·ªçi API: ${apiError.message}`)
    }

    // 4. Ki·ªÉm tra ·ª©ng d·ª•ng web
    console.log('\nüñ•Ô∏è 4. Ki·ªÉm tra ·ª©ng d·ª•ng web:')
    
    try {
      const webResponse = await fetch('http://localhost:3000/')
      if (webResponse.ok) {
        console.log(`   ‚úÖ ·ª®ng d·ª•ng web ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng`)
        console.log(`   üåê C√≥ th·ªÉ truy c·∫≠p t·∫°i: http://localhost:3000`)
      } else {
        console.log(`   ‚ùå ·ª®ng d·ª•ng web tr·∫£ v·ªÅ status: ${webResponse.status}`)
      }
    } catch (webError) {
      console.log(`   ‚ùå L·ªói khi truy c·∫≠p web: ${webError.message}`)
    }

    // 5. T√≥m t·∫Øt
    console.log('\nüìù 5. T√≥m t·∫Øt:')
    console.log('   ‚úÖ ƒê√£ x√≥a to√†n b·ªô d·ªØ li·ªáu chi ti√™u c≈©')
    console.log('   ‚úÖ ·ª®ng d·ª•ng ƒëang l·∫•y d·ªØ li·ªáu t·ª´ Google Sheets tr·ªëng')
    console.log('   ‚úÖ API tr·∫£ v·ªÅ d·ªØ li·ªáu tr·ªëng nh∆∞ mong ƒë·ª£i')
    console.log('   ‚úÖ S·∫µn s√†ng cho d·ªØ li·ªáu m·ªõi t·ª´ Google Sheets')
    
    console.log('\nüéâ Ho√†n th√†nh! ·ª®ng d·ª•ng ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh ƒë√∫ng.')
    console.log('üìä B√¢y gi·ªù b·∫°n c√≥ th·ªÉ th√™m d·ªØ li·ªáu m·ªõi v√†o Google Sheets v√† ·ª©ng d·ª•ng s·∫Ω hi·ªÉn th·ªã ch√∫ng.')

  } catch (error) {
    console.error('\n‚ùå L·ªói trong qu√° tr√¨nh x√°c minh:', error)
    throw error
  }
}

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  finalVerification()
    .then(() => {
      console.log('\n‚úÖ X√°c minh ho√†n th√†nh!')
      process.exit(0)
    })
    .catch((error) => {
      console.error('\n‚ùå X√°c minh th·∫•t b·∫°i:', error)
      process.exit(1)
    })
}

module.exports = { finalVerification }
