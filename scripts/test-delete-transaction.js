#!/usr/bin/env node

/**
 * Script ƒë·ªÉ test t√≠nh nƒÉng x√≥a giao d·ªãch v√† x√≥a ·∫£nh
 */

require('dotenv').config({ path: '.env.local' })

async function testDeleteTransaction() {
  console.log('üß™ Test t√≠nh nƒÉng x√≥a giao d·ªãch v√† x√≥a ·∫£nh...')
  console.log('=' .repeat(50))

  try {
    // Test 1: X√≥a giao d·ªãch kh√¥ng c√≥ ·∫£nh
    console.log('\nüìã Test 1: X√≥a giao d·ªãch kh√¥ng c√≥ ·∫£nh')
    
    const params1 = new URLSearchParams({
      rowIndex: '999' // Row kh√¥ng t·ªìn t·∫°i ƒë·ªÉ test
    })

    const response1 = await fetch(`http://localhost:3000/api/transactions?${params1.toString()}`, {
      method: 'DELETE',
    })

    console.log(`   üìä Response status: ${response1.status}`)
    
    if (response1.ok) {
      const result1 = await response1.json()
      console.log('   ‚úÖ API ho·∫°t ƒë·ªông:', result1.message)
    } else {
      const error1 = await response1.json()
      console.log('   ‚ö†Ô∏è Expected error:', error1.error)
    }

    // Test 2: X√≥a giao d·ªãch c√≥ ·∫£nh
    console.log('\nüìã Test 2: X√≥a giao d·ªãch c√≥ ·∫£nh')
    
    const params2 = new URLSearchParams({
      rowIndex: '999',
      imageUrl: 'https://res.cloudinary.com/dgaktc3fb/image/upload/v1752279559/nongvannam/sn2dddpsfjeqklfieqoa.png'
    })

    const response2 = await fetch(`http://localhost:3000/api/transactions?${params2.toString()}`, {
      method: 'DELETE',
    })

    console.log(`   üìä Response status: ${response2.status}`)
    
    if (response2.ok) {
      const result2 = await response2.json()
      console.log('   ‚úÖ API ho·∫°t ƒë·ªông:', result2.message)
    } else {
      const error2 = await response2.json()
      console.log('   ‚ö†Ô∏è Expected error:', error2.error)
    }

    // Test 3: Test v·ªõi URL ·∫£nh kh√¥ng h·ª£p l·ªá
    console.log('\nüìã Test 3: X√≥a v·ªõi URL ·∫£nh kh√¥ng h·ª£p l·ªá')
    
    const params3 = new URLSearchParams({
      rowIndex: '999',
      imageUrl: 'https://example.com/invalid-image.jpg'
    })

    const response3 = await fetch(`http://localhost:3000/api/transactions?${params3.toString()}`, {
      method: 'DELETE',
    })

    console.log(`   üìä Response status: ${response3.status}`)
    
    if (response3.ok) {
      const result3 = await response3.json()
      console.log('   ‚úÖ API ho·∫°t ƒë·ªông:', result3.message)
    } else {
      const error3 = await response3.json()
      console.log('   ‚ö†Ô∏è Expected error:', error3.error)
    }

    console.log('\nüéâ Test ho√†n th√†nh!')
    console.log('\nüìä T√≥m t·∫Øt t√≠nh nƒÉng x√≥a:')
    console.log('   ‚úÖ API DELETE /api/transactions')
    console.log('   ‚úÖ X√≥a row trong Google Sheets')
    console.log('   ‚úÖ X√≥a ·∫£nh trong Cloudinary (n·∫øu c√≥)')
    console.log('   ‚úÖ Error handling cho c√°c tr∆∞·ªùng h·ª£p edge')
    console.log('   ‚úÖ Clear cache sau khi x√≥a')

    console.log('\nüéÆ C√°ch s·ª≠ d·ª•ng trong UI:')
    console.log('   1. Hover v√†o giao d·ªãch ‚Üí Hi·ªán n√∫t Trash')
    console.log('   2. Click n√∫t Trash ‚Üí Hi·ªán "X√°c nh·∫≠n?"')
    console.log('   3. Click "X√≥a" ‚Üí G·ªçi API DELETE')
    console.log('   4. Giao d·ªãch v√† ·∫£nh b·ªã x√≥a kh·ªèi h·ªá th·ªëng')

    console.log('\nüí° L∆∞u √Ω:')
    console.log('   ‚Ä¢ X√≥a giao d·ªãch s·∫Ω x√≥a lu√¥n ·∫£nh h√≥a ƒë∆°n')
    console.log('   ‚Ä¢ Kh√¥ng th·ªÉ kh√¥i ph·ª•c sau khi x√≥a')
    console.log('   ‚Ä¢ Cache ƒë∆∞·ª£c clear t·ª± ƒë·ªông')
    console.log('   ‚Ä¢ UI refresh ngay l·∫≠p t·ª©c')

  } catch (error) {
    console.error('\n‚ùå L·ªói trong qu√° tr√¨nh test:', error)
    throw error
  }
}

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  testDeleteTransaction()
    .then(() => {
      console.log('\n‚úÖ Test ho√†n th√†nh!')
      process.exit(0)
    })
    .catch((error) => {
      console.error('\n‚ùå Test th·∫•t b·∫°i:', error)
      process.exit(1)
    })
}

module.exports = { testDeleteTransaction }
